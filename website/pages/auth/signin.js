import Head from "next/head";
import styles from "../../styles/Home.module.css";
import Signup from "../../components/signupDialog";
import SigninForm from "../../components/signinForm";
import Box from "@mui/material/Box";
import Button from "@mui/material/Button";
import Typography from "@mui/material/Typography";
import Alert from "@mui/material/Alert";
import { useState } from "react";
import { signIn, getCsrfToken } from "next-auth/react";
import { useRouter } from "next/router";

//This is the landing page of the website. Can be the login page

export default function SignIn({ csrfToken }) {
  const [signup, setSignup] = useState(false);

  const { error } = useRouter().query;

  const handleSubmit = async (event) => {
    const data = new FormData(event.currentTarget);
    const username = data.get("username");
    const password = data.get("password");

    const response = await signIn("signin", {
      callbackUrl: `${window.location.origin}/resources`,
      redirect: false,
      username: username,
      password: password,
    });
  };

  const handleOpen = () => {
    setSignup(true);
  };

  const handleClose = () => {
    setSignup(false);
  };

  const errors = {
    invalid_signin: "Invalid username or password",
    invalid_signup: "Username already exists",
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Sign in</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Typography component="h1" variant="h5">
          Sign in
        </Typography>
        <Box
          component="form"
          onSubmit={handleSubmit}
          method="post"
          action="/api/auth/callback/signin"
          noValidate
          sx={{ mt: 1 }}
        >
          <input name="csrfToken" type="hidden" defaultValue={csrfToken} />
          <SigninForm type="Sign In" />
          <Button variant="text" onClick={handleOpen}>
            {"Don't have an account? Sign Up"}
          </Button>
          <Signup open={signup} onClose={handleClose} csrfToken={csrfToken} />
          {error && <Alert severity="error">{errors[error]}</Alert>}
        </Box>
      </main>
    </div>
  );
}

export async function getServerSideProps(context) {
  return {
    props: {
      csrfToken: await getCsrfToken(context),
    },
  };
}
