import Head from 'next/head';
import styles from '../../styles/Home.module.css';
import Signup from '../../components/signupDialog';
import Button from '@mui/material/Button';
import TextField from '@mui/material/TextField';
import Box from '@mui/material/Box';
import Typography from '@mui/material/Typography';
import IconButton from '@mui/material/IconButton';
import InputAdornment from '@mui/material/InputAdornment';
import Visibility from '@mui/icons-material/Visibility';
import VisibilityOff from '@mui/icons-material/VisibilityOff';
import Alert from '@mui/material/Alert';
import { useState } from 'react';
import { signIn, getCsrfToken } from "next-auth/react";
import { useRouter } from "next/router";

//This is the landing page of the website. Can be the login page

export default function SignIn({ csrfToken }) {
	const [showPass, setShowPass] = useState(false);
  
	const [signup, setSignup] = useState(false);

	const { error } = useRouter().query;
  
	const handleSubmit = async (event) => {
		const data = new FormData(event.currentTarget);
		const username = data.get('username');
		const password = data.get('password');

		const response = await signIn("signin", { callbackUrl: `${window.location.origin}/resources`, redirect: false, username: username, password: password });
	};
  
	const handleOpen = () => {
		setSignup(true);
	}
  
	const handleClose = () => {
		setSignup(false);
	}
  
	const handleShowPass = () => {
		setShowPass(!showPass);
	};

	const errors = {
		invalid_signin: "Invalid username or password",
		invalid_signup: "Username already exists",
	};
	
	return (
		<div className={styles.container}>
			<Head>
				<title>Sign in</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className={styles.main}>
				<Typography component="h1" variant="h5">
					Sign in
				</Typography>
				<Box component="form" onSubmit={handleSubmit} method="post" action="/api/auth/callback/signin" noValidate sx={{ mt: 1 }} >
					<input name="csrfToken" type="hidden" defaultValue={csrfToken} />
					<TextField
						margin="normal"
						required
						fullWidth
						id="username"
						label="Username"
						name="username"
						autoComplete="username"
						autoFocus
					/>
					<TextField
						margin="normal"
						required
						fullWidth
						name="password"
						label="Password"
						id="password"
						autoComplete="current-password"
						type={showPass ? "text" : "password"}
						InputProps={{
							endAdornment: (
								<InputAdornment position="end">
									<IconButton
										aria-label="toggle password visibility"
										onClick={handleShowPass}
										edge="end"
									>
										{showPass ? <Visibility /> : <VisibilityOff />}
									</IconButton>
								</InputAdornment>
							),
						}}
					/>
					<Button
						type="submit"
						fullWidth
						variant="contained"
						sx={{ mt: 3, mb: 2 }}
					>
						Sign In
					</Button>
					<Button variant="text" onClick={handleOpen}>
						{"Don't have an account? Sign Up"}
					</Button>
					<Signup open={signup} onClose={handleClose} csrfToken={csrfToken} />
					{error && <Alert severity="error">{errors[error]}</Alert>}
				</Box>
			</main>
		</div>
	);
}

export async function getServerSideProps(context) {
	return {
	  props: {
		csrfToken: await getCsrfToken(context),
	  },
	}
  }